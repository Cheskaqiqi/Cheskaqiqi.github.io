<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mathematical induction</title>
      <link href="/2022/09/17/New%20Document/"/>
      <url>/2022/09/17/New%20Document/</url>
      
        <content type="html"><![CDATA[<p>#How Does Induction Work</p><p>T is a theorem with a parameter n ≥ 1.</p><p>• If we show that:</p><ol><li>T holds for n = 1 (or a small number d, if n ≥ d)</li><li>For every n ≥ 1</li></ol><p>If T holds for n<br>then T holds for n + 1</p><p>• Then theorem T holds for all n ≥ 1. The assumption that T holds for n is called induction hypothesis</p><p>#Strong Induction</p><p>A statement T with a parameter n is true for n = 1 and<br>if, for every n ≥ 1 the following holds:</p><p>T being true for every natural number m ≤ n implies that T is true for n + 1, then T is true for all natural numbers</p><p>Also, power(2) induction: induction on natural numbers that are integer powers of 2 Multiple induction: base case for one parameter required another induction on another parameter.</p>]]></content>
      
      
      <categories>
          
          <category> ANALYSIS OF ALGORITHMS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BINARY SEARCH AND VARIATIONS</title>
      <link href="/2022/02/11/red-black-tree/"/>
      <url>/2022/02/11/red-black-tree/</url>
      
        <content type="html"><![CDATA[<p>#Binary Search and Variations</p><ul><li>Idea: cut search space in half (about half) by asking only one question.</li><li>Also work when, with constant time, cut search space from n to n<br>a, where a &gt; 1.</li><li>Used often in computer science.</li><li>Pure binary search</li></ul><p>x1, x2, . . . , xn is a sequence of real numbers such that<br>x1 ≤ x2 ≤ · · · ≤ xn<br>Problem: Given a real number z, we want to find whether z appears in the sequence, and<br>if it does, to find an index i such that xi = z.<br>Solution: binary search!</p><p>Binary search:<br>Question: “Is xn/2 &lt; z?”<br>Yes: binary search range becomes xn/2+1, . . . xn<br>No: binary search range becomes x1, . . . , xn/2<br>Complexity: O(log2 n).</p><p>#A More General Version<br>Input: a sorted sequence, x1 ≤ x2 ≤ . . . ≤ xn, and a target value z<br>Output: the largest index i, s.t. xi ≤ z, if there is no such i then return 0;</p><ol><li>If x1 &gt; z, return 0;</li><li>If xn ≤ z, return n;</li><li>l = 1; r = n; (xl ≤ z &lt; xr)</li><li>if l = r − 1 return l;</li><li>Set m to b<br>l+r/2，the greatest integer less than or equal to l+r/2<br>which is the middle between l and r</li><li>if xm &gt; z, then r = m; goto step 4;</li><li>if xm ≤ z, then l = m; goto step 4;</li></ol><p>#Binary Search in a Cyclic Sequence<br>Definition. A sequence x1, x2, . . . , xn is said to be cyclically sorted if the smallest<br>number in the sequence is xi<br>for some unknown i, and the sequence<br>xi<br>, xi+1, . . . , xn, x1, x2, . . . , xi−1<br>is sorted.<br>The Problem: Given a cyclically sorted list, find the position of the minimum element in<br>the list (we assume elements are distinct).</p><p>Solution: For any two numbers xk, xm, such that k &lt; m, compare xk with xm.</p><ol><li>If xk &lt; xm then i cannot be in the range k &lt; j ≤ m (k is possible)</li><li>If xk &gt; xm then i must be in the range k &lt; j ≤ m</li></ol><p>Is xn/2 &lt; xn?<br>Yes: search range 1 . . . n/2. No: search range n/2 + 1, . . . n.<br>Find the index of the smallest element in O(logn) time</p>]]></content>
      
      
      <categories>
          
          <category> ANALYSIS OF ALGORITHMS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cs </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
